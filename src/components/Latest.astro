---
import { getCollection } from "astro:content";
import navIcons from "../assets/icons/navIcons";

// get blog posts
const posts = (await getCollection("blog"))
  .filter((post) => post.data.published)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// get books
const allBooks = (await getCollection("books")).sort(
  (a, b) => b.data.dateRead.valueOf() - a.data.dateRead.valueOf()
);

// latest five books
const firstFiveBooks = allBooks.slice(0, 10);
// add new date key to first five books
const latestBooks = firstFiveBooks.map((b) => ({
  ...b,
  date: new Date(b.data.dateRead),
}));

// latest five posts
const firstFivePosts = posts.slice(0, 10);
// add new date key to first five posts
const latestPosts = firstFivePosts.map((p) => ({
  ...p,
  date: new Date(p.data.pubDate),
}));

// combine books and posts
const latest = [...latestBooks, ...latestPosts];
// sort by date
const latestSorted = latest.sort((a, b) => b.date - a.date);

const dateOptions: object = {
  year: "numeric",
  month: "short",
  day: "numeric",
  timeZone: "UTC",
};
---

<h2 class="mb-2">Latest</h2>

<ul class="list-none font-normal text-lg leading-8">
  {
    latestSorted.slice(0, 6).map((item) => (
      <li>
        {item.collection === "books" ? (
          <span class="text-book">
            <Fragment set:html={navIcons.book} />{" "}
            <a href={`${item.data.bookBuyUrl}`}>
            {item.data.status
              ? `${new Date(item.data.dateRead).toLocaleDateString("en-US", dateOptions)}: Finished reading ${item.data.bookTitle}`
              : `Currently Reading ${item.data.bookTitle}`}
            </a>
          </span>
        ) : (
          <span class="text-blog">
            <Fragment set:html={navIcons.blog} />{" "}
            <a href={`/blog/${item.id}/`}>
            {new Date(item.data.pubDate).toLocaleDateString(
              "en-US",
              dateOptions
            )}: {item.data.title}
            </a>
          </span>
        )}
        {/* {item.collection === "books" ? (
        <span class="text-book">
          <Fragment set:html={navIcons.book} /></span>
        ) : (
          <span class="text-blog"
          <Fragment set:html={navIcons.blog} />
        )}
        </span>
        */}
      </li>
    ))
  }
</ul>
